[1/9] Performing build step for 'bootloader'
[1/1] cd /home/felipe/Desktop/Tareas/IoT/Tarea1/tcp_udp_client/build/bootloader/esp-idf/esptool_py && /home/felipe/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/felipe/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/felipe/Desktop/Tareas/IoT/Tarea1/tcp_udp_client/build/bootloader/bootloader.bin
Bootloader binary size 0x6820 bytes. 0x7e0 bytes (7%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/tcp_client_main.c.obj
/home/felipe/Desktop/Tareas/IoT/Tarea1/tcp_udp_client/main/tcp_client_main.c: In function 'app_main':
/home/felipe/Desktop/Tareas/IoT/Tarea1/tcp_udp_client/main/tcp_client_main.c:48:36: warning: passing argument 1 of 'xTaskCreate' from incompatible pointer type [-Wincompatible-pointer-types]
   48 |             response = xTaskCreate(udp_client_task, "udp_client", 4096, pkg, 5, NULL);
      |                                    ^~~~~~~~~~~~~~~
      |                                    |
      |                                    char * (*)(void *)
In file included from /home/felipe/esp/esp-idf/components/esp_event/include/esp_event.h:13,
                 from /home/felipe/Desktop/Tareas/IoT/Tarea1/tcp_udp_client/main/tcp_client_main.c:9:
/home/felipe/esp/esp-idf/components/freertos/FreeRTOS-Kernel/include/freertos/task.h:588:44: note: expected 'TaskFunction_t' {aka 'void (*)(void *)'} but argument is of type 'char * (*)(void *)'
  588 |     BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
      |                             ~~~~~~~~~~~~~~~^~~~~~~~~~
/home/felipe/Desktop/Tareas/IoT/Tarea1/tcp_udp_client/main/tcp_client_main.c:48:22: warning: assignment to 'char *' from 'BaseType_t' {aka 'int'} makes pointer from integer without a cast [-Wint-conversion]
   48 |             response = xTaskCreate(udp_client_task, "udp_client", 4096, pkg, 5, NULL);
      |                      ^
[3/7] Linking C static library esp-idf/main/libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable tcp_client.elf
[6/7] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated /home/felipe/Desktop/Tareas/IoT/Tarea1/tcp_udp_client/build/tcp_client.bin
[7/7] cd /home/felipe/Desktop/Tareas/IoT/Tarea1/tcp_udp_client/build/esp-idf/esptool_py && /home/felipe/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/felipe/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/felipe/Desktop/Tareas/IoT/Tarea1/tcp_udp_client/build/partition_table/partition-table.bin /home/felipe/Desktop/Tareas/IoT/Tarea1/tcp_udp_client/build/tcp_client.bin
tcp_client.bin binary size 0xb73e0 bytes. Smallest app partition is 0x100000 bytes. 0x48c20 bytes (28%) free.
